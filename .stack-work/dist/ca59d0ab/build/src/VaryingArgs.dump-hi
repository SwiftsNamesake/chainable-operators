
==================== FINAL INTERFACE ====================
2017-03-13 13:11:57.3780349 UTC

interface chained-operators-0.1.0.0-GkBvuZfGoz5312Kp8mtkpo:VaryingArgs 8001
  interface hash: 714cad9ac038dbf83192e5d68c973728
  ABI hash: d89f4f77900bb5596fdc23d195aaf13a
  export-list hash: 416231e8232bb79ca65104d198db7957
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 3a25d3d82c0c9103ac0a57c201cf6d5d
  sig of: Nothing
  used TH splices: False
  where
exports:
  VaryingArgs.<.
  VaryingArgs.main
  VaryingArgs.ChainLink{VaryingArgs.join}
  VaryingArgs.VaryingArg
  VaryingArgs.VaryingFold{VaryingArgs.fold}
module dependencies:
package dependencies: base-4.9.0.0* ghc-prim-0.5.0.0
                      integer-gmp-1.0.0.1
orphans: base-4.9.0.0:GHC.Base base-4.9.0.0:GHC.Float
family instance modules: base-4.9.0.0:Control.Applicative
                         base-4.9.0.0:Data.Either base-4.9.0.0:Data.Functor.Const
                         base-4.9.0.0:Data.Monoid base-4.9.0.0:Data.Type.Equality
                         base-4.9.0.0:GHC.Generics base-4.9.0.0:GHC.IO.Exception
                         base-4.9.0.0:GHC.TypeLits
import  -/  base-4.9.0.0:GHC.Base dd8044a8d640eee51828c17c476a6ba7
import  -/  base-4.9.0.0:Prelude 2d9cd8b0ec3d728f62b734df888d2e34
import  -/  base-4.9.0.0:System.IO c1068c4f4231e3198e330f99a58145b0
import  -/  ghc-prim-0.5.0.0:GHC.Classes 16d48e012d23eaef9bca91ccdd572c02
import  -/  ghc-prim-0.5.0.0:GHC.Types 7378e41b7749213c8c88ceb6b0665d4c
fixities infixr 5 <.
09edd1d4fcdc71e5bd20579834cd31aa
  $fChainLinkInt(,)(,) ::
    VaryingArgs.ChainLink
      GHC.Types.Int
      (GHC.Types.Int, GHC.Types.Bool)
      (GHC.Types.Int, GHC.Types.Bool)
  DFunId
  {- Arity: 3, HasNoCafRefs,
     Strictness: <L,1*C1(C1(U))><L,U><S,1*U(U,1*U)>m,
     Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, True)
                VaryingArgs.$fChainLinkInt(,)(,)_$cjoin
                  `cast`
                (Sym (VaryingArgs.N:ChainLink[0]
                          <GHC.Types.Int>_N
                          <(GHC.Types.Int, GHC.Types.Bool)>_N
                          <(GHC.Types.Int, GHC.Types.Bool)>_N)) -}
365e1e9af820ac3b526e4c7b013f631d
  $fChainLinkInt(,)(,)_$cjoin ::
    (GHC.Types.Int -> GHC.Types.Int -> GHC.Types.Bool)
    -> GHC.Types.Int
    -> (GHC.Types.Int, GHC.Types.Bool)
    -> (GHC.Types.Int, GHC.Types.Bool)
  {- Arity: 3, HasNoCafRefs,
     Strictness: <L,1*C1(C1(U))><L,U><S,1*U(U,1*U)>m,
     Unfolding: InlineRule (3, True, False)
                (\ (f :: GHC.Types.Int -> GHC.Types.Int -> GHC.Types.Bool)
                   (a :: GHC.Types.Int)
                   (ds :: (GHC.Types.Int, GHC.Types.Bool)) ->
                 case ds of wild { (,) carried previous ->
                 (a,
                  case f a carried of wild1 {
                    GHC.Types.False -> GHC.Types.False
                    GHC.Types.True -> previous }) }) -}
09edd1d4fcdc71e5bd20579834cd31aa
  $fChainLinkInt(,)Bool ::
    VaryingArgs.ChainLink
      GHC.Types.Int (GHC.Types.Int, GHC.Types.Bool) GHC.Types.Bool
  DFunId
  {- Arity: 3, HasNoCafRefs,
     Strictness: <C(C(S)),1*C1(C1(U))><L,U><S,1*U(U,1*U)>,
     Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, True)
                VaryingArgs.$fChainLinkInt(,)Bool_$cjoin
                  `cast`
                (Sym (VaryingArgs.N:ChainLink[0]
                          <GHC.Types.Int>_N
                          <(GHC.Types.Int, GHC.Types.Bool)>_N
                          <GHC.Types.Bool>_N)) -}
0f5af77d76e2d240d0643cc750133061
  $fChainLinkInt(,)Bool_$cjoin ::
    (GHC.Types.Int -> GHC.Types.Int -> GHC.Types.Bool)
    -> GHC.Types.Int
    -> (GHC.Types.Int, GHC.Types.Bool)
    -> GHC.Types.Bool
  {- Arity: 3, HasNoCafRefs,
     Strictness: <C(C(S)),1*C1(C1(U))><L,U><S,1*U(U,1*U)>,
     Unfolding: InlineRule (3, True, False)
                (\ (f :: GHC.Types.Int -> GHC.Types.Int -> GHC.Types.Bool)
                   (a :: GHC.Types.Int)
                   (ds :: (GHC.Types.Int, GHC.Types.Bool)) ->
                 case ds of wild { (,) carried previous ->
                 case f a carried of wild1 {
                   GHC.Types.False -> GHC.Types.False
                   GHC.Types.True -> previous } }) -}
09edd1d4fcdc71e5bd20579834cd31aa
  $fChainLinkIntInt(,) ::
    VaryingArgs.ChainLink
      GHC.Types.Int GHC.Types.Int (GHC.Types.Int, GHC.Types.Bool)
  DFunId
  {- Arity: 3, HasNoCafRefs, Strictness: <L,1*C1(C1(U))><L,U><L,U>m,
     Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, True)
                VaryingArgs.$fChainLinkIntInt(,)_$cjoin
                  `cast`
                (Sym (VaryingArgs.N:ChainLink[0]
                          <GHC.Types.Int>_N
                          <GHC.Types.Int>_N
                          <(GHC.Types.Int, GHC.Types.Bool)>_N)) -}
151a40b8d6f31ba444c79d8fcca79578
  $fChainLinkIntInt(,)_$cjoin ::
    (GHC.Types.Int -> GHC.Types.Int -> GHC.Types.Bool)
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> (GHC.Types.Int, GHC.Types.Bool)
  {- Arity: 3, HasNoCafRefs, Strictness: <L,1*C1(C1(U))><L,U><L,U>m,
     Unfolding: InlineRule (3, True, False)
                (\ (f :: GHC.Types.Int -> GHC.Types.Int -> GHC.Types.Bool)
                   (a :: GHC.Types.Int)
                   (b :: GHC.Types.Int) ->
                 (a, f a b)) -}
09edd1d4fcdc71e5bd20579834cd31aa
  $fChainLinkIntIntBool ::
    VaryingArgs.ChainLink GHC.Types.Int GHC.Types.Int GHC.Types.Bool
  DFunId
  {- Arity: 3, HasNoCafRefs,
     Strictness: <C(C(S)),1*C1(C1(U))><L,U><L,U>,
     Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, True)
                VaryingArgs.$fChainLinkIntIntBool_$cjoin
                  `cast`
                (Sym (VaryingArgs.N:ChainLink[0]
                          <GHC.Types.Int>_N <GHC.Types.Int>_N <GHC.Types.Bool>_N)) -}
1911950922fa7340988d30d15bd99611
  $fChainLinkIntIntBool_$cjoin ::
    (GHC.Types.Int -> GHC.Types.Int -> GHC.Types.Bool)
    -> GHC.Types.Int -> GHC.Types.Int -> GHC.Types.Bool
  {- Arity: 3, HasNoCafRefs,
     Strictness: <C(C(S)),1*C1(C1(U))><L,U><L,U>,
     Unfolding: InlineRule (3, True, True)
                (\ (f :: GHC.Types.Int -> GHC.Types.Int -> GHC.Types.Bool)
                   (a :: GHC.Types.Int)
                   (b :: GHC.Types.Int) ->
                 f a b) -}
d723af4f4aa4fff52a57ed661f3dd6f4
  $fVaryingArgInt :: VaryingArgs.VaryingArg GHC.Types.Int
  DFunId
  {- HasNoCafRefs, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:. @ GHC.Types.Int -}
d723af4f4aa4fff52a57ed661f3dd6f4
  $fVaryingArg[] :: VaryingArgs.VaryingArg [GHC.Types.Char]
  DFunId
  {- HasNoCafRefs, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:. @ [GHC.Types.Char] -}
f95f5eb05da3f71fae474b0b9281277a
  $fVaryingFoldab(->) ::
    (VaryingArgs.VaryingArg a, VaryingArgs.VaryingFold a b c) =>
    VaryingArgs.VaryingFold a b (a -> c)
  DFunId
  {- Arity: 7, HasNoCafRefs,
     Strictness: <L,U><C(C(C(C(S)))),U><L,A><L,A><L,U><L,U><L,U>,
     Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (2, False, True)
                VaryingArgs.$fVaryingFoldab(->)_$cfold
                  `cast`
                (forall (a :: <*>_N) (b :: <*>_N) (c :: <*>_N).
                 <VaryingArgs.VaryingArg a>_R
                 ->_R <VaryingArgs.VaryingFold a b c>_R
                 ->_R Sym (VaryingArgs.N:VaryingFold[0] <a>_N <b>_N <a -> c>_N)) -}
f95f5eb05da3f71fae474b0b9281277a
  $fVaryingFoldab(->)_$cfold ::
    (VaryingArgs.VaryingArg a, VaryingArgs.VaryingFold a b c,
     VaryingArgs.VaryingArg a, VaryingArgs.VaryingFold a b (a -> c)) =>
    (b -> a -> b) -> b -> a -> c
  {- Arity: 7, HasNoCafRefs,
     Strictness: <L,U><C(C(C(C(S)))),U><L,A><L,A><L,U><L,U><L,U>,
     Unfolding: InlineRule (7, True, False)
                (\ @ a
                   @ b
                   @ c
                   ($dVaryingArg :: VaryingArgs.VaryingArg a)
                   ($dVaryingFold :: VaryingArgs.VaryingFold a b c)
                   ($dVaryingArg1 :: VaryingArgs.VaryingArg a)
                   ($dVaryingFold1 :: VaryingArgs.VaryingFold a b (a -> c))
                   (f :: b -> a -> b)
                   (b1 :: b)
                   (a1 :: a) ->
                 $dVaryingFold
                   `cast`
                 (VaryingArgs.N:VaryingFold[0] <a>_N <b>_N <c>_N)
                   $dVaryingArg
                   $dVaryingFold
                   f
                   (f b1 a1)) -}
f95f5eb05da3f71fae474b0b9281277a
  $fVaryingFoldabb :: VaryingArgs.VaryingFold a b b
  DFunId
  {- Arity: 4, HasNoCafRefs, Strictness: <L,A><L,A><L,A><S,1*U>,
     Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, True)
                VaryingArgs.$fVaryingFoldabb_$cfold
                  `cast`
                (forall (a :: <*>_N) (b :: <*>_N).
                 Sym (VaryingArgs.N:VaryingFold[0] <a>_N <b>_N <b>_N)) -}
f95f5eb05da3f71fae474b0b9281277a
  $fVaryingFoldabb_$cfold ::
    (VaryingArgs.VaryingArg a, VaryingArgs.VaryingFold a b b) =>
    (b -> a -> b) -> b -> b
  {- Arity: 4, HasNoCafRefs, Strictness: <L,A><L,A><L,A><S,1*U>,
     Unfolding: InlineRule (4, True, True)
                (\ @ a
                   @ b
                   ($dVaryingArg :: VaryingArgs.VaryingArg a)
                   ($dVaryingFold :: VaryingArgs.VaryingFold a b b)
                   (f :: b -> a -> b)
                   (acc :: b) ->
                 acc) -}
35ba7052c51843f91ff3841cc933cd2d
  $tc'C:ChainLink :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   2161176750593811684##
                   17998957939330953537##
                   VaryingArgs.$trModule
                   VaryingArgs.$tc'C:ChainLink1) -}
36a587e3ec15ac7abe4064500901a729
  $tc'C:ChainLink1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'C:ChainLink"#) -}
66391b21f8e528b5df4b77f06988ee71
  $tc'C:VaryingArg :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   3847235369447117972##
                   6780307551686191819##
                   VaryingArgs.$trModule
                   VaryingArgs.$tc'C:VaryingArg1) -}
22af927fcae8144d598cbcf84dfaac1a
  $tc'C:VaryingArg1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'C:VaryingArg"#) -}
3d42b19e4bec5e8495d04aa69dbe6d20
  $tc'C:VaryingFold :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   1349549470975225778##
                   12877091038053006242##
                   VaryingArgs.$trModule
                   VaryingArgs.$tc'C:VaryingFold1) -}
7223fc67dfbc0261b4b250f2e996a52b
  $tc'C:VaryingFold1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'C:VaryingFold"#) -}
fe7818cb3dffe8b00014bc4b0af102c8
  $tcChainLink :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   7355293649300430789##
                   3395008964583480346##
                   VaryingArgs.$trModule
                   VaryingArgs.$tcChainLink1) -}
6445b595de5a6d43f91d9fe8842066e5
  $tcChainLink1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "ChainLink"#) -}
98b125e474bca5a64874a12f5e5972a5
  $tcVaryingArg :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   6444212103152962711##
                   12159307979425684070##
                   VaryingArgs.$trModule
                   VaryingArgs.$tcVaryingArg1) -}
73f37c078dc0c4c4e1b43ef713091884
  $tcVaryingArg1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "VaryingArg"#) -}
d17bf092d1baddc800dd2126e3bfb081
  $tcVaryingFold :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   3425376021751980804##
                   4447443615284583703##
                   VaryingArgs.$trModule
                   VaryingArgs.$tcVaryingFold1) -}
85c6ee9d3b06eca5e3ecdbb7ba98deca
  $tcVaryingFold1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "VaryingFold"#) -}
221948dbf2bfd07454c6a06986b00dc7
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   VaryingArgs.$trModule2
                   VaryingArgs.$trModule1) -}
3db56f09455a54cef0011267b5603fb4
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "VaryingArgs"#) -}
c91d894b1e91cba9108e34d234411787
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   "chained-operators-0.1.0.0-GkBvuZfGoz5312Kp8mtkpo"#) -}
56c78bcaae7fd2068a68e312d13248d0
  (<.) ::
    (GHC.Classes.Ord a, VaryingArgs.ChainLink a b c) => a -> b -> c
  {- Arity: 2, HasNoCafRefs,
     Strictness: <L,1*U(A,A,1*U,A,A,A,A,A)><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, False)
                (\ @ a
                   @ b
                   @ c
                   ($dOrd :: GHC.Classes.Ord a)
                   ($dChainLink :: VaryingArgs.ChainLink a b c) ->
                 $dChainLink `cast` (VaryingArgs.N:ChainLink[0] <a>_N <b>_N <c>_N)
                   (GHC.Classes.< @ a $dOrd)) -}
09edd1d4fcdc71e5bd20579834cd31aa
  class ChainLink a b c | b -> a where
    join :: (a -> a -> GHC.Types.Bool) -> a -> b -> c
    {-# MINIMAL join #-}
d723af4f4aa4fff52a57ed661f3dd6f4
  class VaryingArg a
f95f5eb05da3f71fae474b0b9281277a
  class VaryingFold a b c where
    fold :: (VaryingArgs.VaryingArg a,
             VaryingArgs.VaryingFold a b c) =>
            (b -> a -> b) -> b -> c
    RecFlag: Recursive
    {-# MINIMAL fold #-}
058a3cb6965fa758fe72775d6c23202e
  main :: GHC.Types.IO ()
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                VaryingArgs.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R)) -}
067e654a1f8796ba3572d9f112deecd0
  main1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        VaryingArgs.main6
                        GHC.Types.True
                        s of ds1 { (#,#) ipv ipv1 ->
                 case GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        VaryingArgs.main2
                        GHC.Types.True
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 GHC.IO.Handle.Text.hPutStr2
                   GHC.IO.Handle.FD.stdout
                   GHC.Show.shows20
                   GHC.Types.True
                   ipv2 } }) -}
aafe341e705d195e9ab9c719f28c3069
  main2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   GHC.Show.shows8
                   VaryingArgs.main3) -}
71835286aadee2323ed0aac0816be8ce
  main3 :: GHC.Base.String
  {- Unfolding: (GHC.Show.showLitString
                   VaryingArgs.main5
                   VaryingArgs.main4) -}
7eadbb0fc6a906ddd008eca66f3bad50
  main4 :: [GHC.Types.Char]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   GHC.Show.shows8
                   (GHC.Types.[] @ GHC.Types.Char)) -}
a6ec6110f75c07cfefc4645b00158643
  main5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Hello World"#) -}
0522ce466a312408704829a73d387d45
  main6 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Let's see if it works"#) -}
instance [safe] VaryingArgs.ChainLink [GHC.Types.Int, (,), (,)]
  = VaryingArgs.$fChainLinkInt(,)(,)
instance [safe] VaryingArgs.ChainLink [GHC.Types.Int, (,),
                                       GHC.Types.Bool]
  = VaryingArgs.$fChainLinkInt(,)Bool
instance [safe] VaryingArgs.ChainLink [GHC.Types.Int,
                                       GHC.Types.Int, (,)]
  = VaryingArgs.$fChainLinkIntInt(,)
instance [safe] VaryingArgs.ChainLink [GHC.Types.Int,
                                       GHC.Types.Int, GHC.Types.Bool]
  = VaryingArgs.$fChainLinkIntIntBool
instance [safe] VaryingArgs.VaryingArg [GHC.Types.Int]
  = VaryingArgs.$fVaryingArgInt
instance [safe] VaryingArgs.VaryingArg [[]]
  = VaryingArgs.$fVaryingArg[]
instance [safe] VaryingArgs.VaryingFold [., ., (->)]
  = VaryingArgs.$fVaryingFoldab(->)
instance [safe] VaryingArgs.VaryingFold [., ., .]
  = VaryingArgs.$fVaryingFoldabb
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False

